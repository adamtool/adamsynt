<?xml version="1.0" encoding="UTF-8"?>
<project name="adam_synt" default="jar">
	<!-- For building the standalone version in libs.res the jars have to start with ${libfolder}/ and have to be put int ${mainfolder}/lib 
and the classes have to start with ${mainfolder}/ and have to be located from the directory where the build_macros.xml is positioned. -->

	<dirname property="synt.basedir" file="${ant.file.adam_synt}"/>

<!--  %%%%%%%%%%%%%%%%%%%%%%%%%%%%% IMPORTS %%%%%%%%%%%%%%%%%%%%%%%%%%% -->	
	<property file="${synt.basedir}/build.properties"/>
	<import file="${mainfolder}/build_macros.xml" optional="false"/>
	<include file="${mainfolder}/build_targets.xml" as="synt.fu" optional="false"/>

<!--  %%%%%%%%%%%%%%%%%%%%%%%%%%%%% PATHs %%%%%%%%%%%%%%%%%%%%%%%%%%% -->	
	<union id="synt.jar.res">    			
<!--			<zipfileset includes="**/*.class" src="${mainfolder}/lib/apt/apt.jar"/>
			<zipfileset includes="**/*.stg" src="${mainfolder}/lib/apt/apt.jar"/>
			<zipfileset includes="**/*.class" src="${mainfolder}/lib/commons-io-2.4/commons-io-2.4.jar"/>
			<zipfileset includes="**/*.class" src="${logics.basedir}/lib/apt/apt-lib.jar"/>
			<zipfileset includes="**/*.class" src="${logics.basedir}/lib/apt/apt-io.jar"/>
			<zipfileset includes="**/*.stg" src="${logics.basedir}/lib/apt/apt-io.jar"/>-->
	</union>

<!--  %%%%%%%%%%%%%%%%%%%%%%%%%%%%% PROPERTIES %%%%%%%%%%%%%%%%%%%%%%%%%%% -->	
	<target name="loadProperties">
		<property file="${subproject.basedir}/build.properties"/>		
	</target>

<!--  %%%%%%%%%%%%%%%%%%%%%%%%%%%%% DELEGATES %%%%%%%%%%%%%%%%%%%%%%%%%%% -->	
	<target name="test" depends="loadProperties" description="Runs all tests">
		<antcall target="synt.fu.test"/>
			<!--<ant antfile="${logics.basedir}/build_logics.xml" target="test"></ant>	-->	
	</target>
	<target name="test-method" depends="loadProperties" description="Runs the tests of a specific method">
		<antcall target="synt.fu.test-method"/>
	</target>
	<target name="test-class" depends="loadProperties" description="Runs the tests of a specific class">
		<antcall target="synt.fu.test-class"/>
	</target>
	<target name="jar" depends="loadProperties" description="Builds a jar with all its dependencies">
		<antcall target="synt.fu.jar"/>
	</target>
	<target name="jar-standalone" depends="loadProperties" description="Builds a jar with all its dependencies">
		<antcall target="synt.fu.jar-standalone"/>
	</target>
    <target name="deploy" depends="clean-all,jar-standalone,deploy_protocol" description="Builds a jar with all its dependencies">
		<jar destfile="adam_synt.jar">
			<zipfileset includes="**/*.class" src="./adam_synt-standalone.jar"/>
			<zipfileset includes="**/*.stg" src="./adam_synt-standalone.jar"/>
		<!--	<zipfileset dir="${libfolder}" includes="quabs_mac" fullpath="lib/quabs_mac"/>
			<zipfileset dir="${libfolder}" includes="quabs_unix" fullpath="lib/quabs_unix"/>-->
			<manifest>
				<attribute name="Main-Class" value="uniolunisaar.adam.main.ui.cl.AdamSynthesizer"/>
			</manifest>
		</jar>	
	</target>
    <target name="deploy_protocol" depends="clean-all,jar-standalone" description="Builds the server-protocal jar with all its dependencies">
        <jar destfile="adam_protocol.jar">
			<fileset dir="classes/" includes="uniolunisaar/adam/ui/cl/serverprotocol/**/*.class"/>
		</jar>
		<copy file="adam_protocol.jar" tofile="${libfolder}/adam_protocol.jar"/>
	</target>
	<target name="javadoc" depends="loadProperties" description="Creates the JavaDoc of this package.">
		<antcall target="bounded.fu.javadoc"/>
	</target>
	<target name="clean" depends="loadProperties" description="Cleans all temporary files.">
		<antcall target="synt.fu.clean"/>
	</target>
	<target name="clean-all" depends="loadProperties" description="Cleans all temporary files including the reports">
		<antcall target="synt.fu.clean-all"/>
		<delete file="adam_protocol.jar" failonerror="false"/>
	</target>
</project>
